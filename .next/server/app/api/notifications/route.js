(()=>{var e={};e.id=170,e.ids=[170],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6010:(e,t,r)=>{"use strict";r.d(t,{db:()=>i});let s=require("@prisma/client"),i=globalThis.prisma??new s.PrismaClient},6487:()=>{},7166:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>f,routeModule:()=>d,serverHooks:()=>x,workAsyncStorage:()=>c,workUnitAsyncStorage:()=>l});var s={};r.r(s),r.d(s,{GET:()=>p});var i=r(6559),n=r(8088),a=r(7719),o=r(2190),u=r(6010);async function p(e){let t=e.user;try{let e=await u.db.notification.findMany({where:{userId:t.id.toString()},orderBy:{createdAt:"desc"}});return o.NextResponse.json(e)}catch(e){return o.NextResponse.json({message:"Failed to fetch notifications",error:e.message},{status:500})}}let d=new i.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/notifications/route",pathname:"/api/notifications",filename:"route",bundlePath:"app/api/notifications/route"},resolvedPagePath:"C:\\Users\\aande\\buildx-backend\\app\\api\\notifications\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:c,workUnitAsyncStorage:l,serverHooks:x}=d;function f(){return(0,a.patchFetch)({workAsyncStorage:c,workUnitAsyncStorage:l})}},8335:()=>{},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[447,580],()=>r(7166));module.exports=s})();