(()=>{var e={};e.id=207,e.ids=[207],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4037:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>m,routeModule:()=>u,serverHooks:()=>x,workAsyncStorage:()=>c,workUnitAsyncStorage:()=>l});var a={};r.r(a),r.d(a,{PATCH:()=>p});var s=r(6559),i=r(8088),n=r(7719),o=r(2190),d=r(6010);async function p(e,t){let{id:r}=await t.params;try{let e=await d.db.notification.update({where:{id:r},data:{read:!0}});return o.NextResponse.json({message:"Notification marked as read",updated:e})}catch(e){return o.NextResponse.json({message:"Failed to mark notification as read",error:e.message},{status:500})}}let u=new s.AppRouteRouteModule({definition:{kind:i.RouteKind.APP_ROUTE,page:"/api/notifications/[id]/read/route",pathname:"/api/notifications/[id]/read",filename:"route",bundlePath:"app/api/notifications/[id]/read/route"},resolvedPagePath:"C:\\Users\\aande\\buildx-backend\\app\\api\\notifications\\[id]\\read\\route.ts",nextConfigOutput:"",userland:a}),{workAsyncStorage:c,workUnitAsyncStorage:l,serverHooks:x}=u;function m(){return(0,n.patchFetch)({workAsyncStorage:c,workUnitAsyncStorage:l})}},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6010:(e,t,r)=>{"use strict";r.d(t,{db:()=>s});let a=require("@prisma/client"),s=globalThis.prisma??new a.PrismaClient},6487:()=>{},8335:()=>{},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var t=require("../../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[447,580],()=>r(4037));module.exports=a})();