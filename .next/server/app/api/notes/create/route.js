(()=>{var e={};e.id=760,e.ids=[760],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},5160:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>g,routeModule:()=>d,serverHooks:()=>x,workAsyncStorage:()=>c,workUnitAsyncStorage:()=>l});var s={};r.r(s),r.d(s,{POST:()=>p});var a=r(6559),n=r(8088),o=r(7719),i=r(2190),u=r(6010);async function p(e){let t=e.user,{projectId:r,content:s}=await e.json();if(!r||!s)return i.NextResponse.json({message:"Project ID and content are required"},{status:400});try{let e=await u.db.projectNote.create({data:{projectId:r,userId:t.id.toString(),content:s}});return i.NextResponse.json({message:"Note added",note:e},{status:201})}catch(e){return i.NextResponse.json({message:"Error creating note",error:e.message},{status:500})}}let d=new a.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/notes/create/route",pathname:"/api/notes/create",filename:"route",bundlePath:"app/api/notes/create/route"},resolvedPagePath:"C:\\Users\\aande\\buildx-backend\\app\\api\\notes\\create\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:c,workUnitAsyncStorage:l,serverHooks:x}=d;function g(){return(0,o.patchFetch)({workAsyncStorage:c,workUnitAsyncStorage:l})}},6010:(e,t,r)=>{"use strict";r.d(t,{db:()=>a});let s=require("@prisma/client"),a=globalThis.prisma??new s.PrismaClient},6487:()=>{},8335:()=>{},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[447,580],()=>r(5160));module.exports=s})();