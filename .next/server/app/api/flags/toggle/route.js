(()=>{var e={};e.id=254,e.ids=[254],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6010:(e,t,r)=>{"use strict";r.d(t,{db:()=>a});let s=require("@prisma/client"),a=globalThis.prisma??new s.PrismaClient},6487:()=>{},7530:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>x,routeModule:()=>d,serverHooks:()=>c,workAsyncStorage:()=>l,workUnitAsyncStorage:()=>g});var s={};r.r(s),r.d(s,{POST:()=>p});var a=r(6559),n=r(8088),i=r(7719),o=r(2190),u=r(6010);async function p(e){let{key:t,enabled:r}=await e.json();try{let e=await u.db.featureFlag.upsert({where:{key:t},update:{enabled:r},create:{key:t,enabled:r}});return o.NextResponse.json({message:"Feature flag updated",updated:e})}catch(e){return o.NextResponse.json({message:"Failed to update flag",error:e.message},{status:500})}}let d=new a.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/flags/toggle/route",pathname:"/api/flags/toggle",filename:"route",bundlePath:"app/api/flags/toggle/route"},resolvedPagePath:"C:\\Users\\aande\\buildx-backend\\app\\api\\flags\\toggle\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:l,workUnitAsyncStorage:g,serverHooks:c}=d;function x(){return(0,i.patchFetch)({workAsyncStorage:l,workUnitAsyncStorage:g})}},8335:()=>{},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[447,580],()=>r(7530));module.exports=s})();