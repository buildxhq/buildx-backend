(()=>{var e={};e.id=163,e.ids=[163],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6010:(e,r,t)=>{"use strict";t.d(r,{db:()=>a});let s=require("@prisma/client"),a=globalThis.prisma??new s.PrismaClient},6487:()=>{},8091:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>g,routeModule:()=>l,serverHooks:()=>x,workAsyncStorage:()=>d,workUnitAsyncStorage:()=>c});var s={};t.r(s),t.d(s,{GET:()=>p});var a=t(6559),n=t(8088),i=t(7719),o=t(2190),u=t(6010);async function p(){try{let e=await u.db.featureFlag.findMany();return o.NextResponse.json({flags:e})}catch(e){return o.NextResponse.json({message:"Failed to fetch feature flags",error:e.message},{status:500})}}let l=new a.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/flags/all/route",pathname:"/api/flags/all",filename:"route",bundlePath:"app/api/flags/all/route"},resolvedPagePath:"C:\\Users\\aande\\buildx-backend\\app\\api\\flags\\all\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:d,workUnitAsyncStorage:c,serverHooks:x}=l;function g(){return(0,i.patchFetch)({workAsyncStorage:d,workUnitAsyncStorage:c})}},8335:()=>{},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[447,580],()=>t(8091));module.exports=s})();