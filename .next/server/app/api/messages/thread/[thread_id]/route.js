(()=>{var e={};e.id=966,e.ids=[966],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6010:(e,r,t)=>{"use strict";t.d(r,{db:()=>a});let s=require("@prisma/client"),a=globalThis.prisma??new s.PrismaClient},6487:()=>{},6857:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>x,routeModule:()=>u,serverHooks:()=>m,workAsyncStorage:()=>c,workUnitAsyncStorage:()=>l});var s={};t.r(s),t.d(s,{GET:()=>p});var a=t(6559),i=t(8088),n=t(7719),d=t(2190),o=t(6010);async function p(e,r){let{thread_id:t}=await r.params;try{let e=await o.db.message.findMany({where:{threadId:t},orderBy:{sentAt:"asc"}});return d.NextResponse.json({thread_id:t,messages:e})}catch(e){return d.NextResponse.json({message:"Failed to get messages",error:e.message},{status:500})}}let u=new a.AppRouteRouteModule({definition:{kind:i.RouteKind.APP_ROUTE,page:"/api/messages/thread/[thread_id]/route",pathname:"/api/messages/thread/[thread_id]",filename:"route",bundlePath:"app/api/messages/thread/[thread_id]/route"},resolvedPagePath:"C:\\Users\\aande\\buildx-backend\\app\\api\\messages\\thread\\[thread_id]\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:c,workUnitAsyncStorage:l,serverHooks:m}=u;function x(){return(0,n.patchFetch)({workAsyncStorage:c,workUnitAsyncStorage:l})}},8335:()=>{},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")}};var r=require("../../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[447,580],()=>t(6857));module.exports=s})();